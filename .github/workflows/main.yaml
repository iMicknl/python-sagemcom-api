name: Linters

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  analyse:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Set up Poetry
        uses: Gr1N/setup-poetry@v8

      - name: Cache venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ hashFiles('**/poetry.lock') }}

      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit/
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/.pre-commit-config.yaml') }} # yamllint disable-line

      - name: Install dependencies
        run: poetry install

      - name: Register problems matchers
        run: |
          echo "::add-matcher::.github/workflows/matchers/pylint.json"
          echo "::add-matcher::.github/workflows/matchers/flake8.json"
          echo "::add-matcher::.github/workflows/matchers/mypy.json"
          echo "::add-matcher::.github/workflows/matchers/python.json"

      - name: Apply all pre-commit
        run: poetry run pre-commit run -a
